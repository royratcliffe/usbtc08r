// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// open_unit
int open_unit();
RcppExport SEXP _usbtc08r_open_unit() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(open_unit());
    return rcpp_result_gen;
END_RCPP
}
// open_unit_async
int open_unit_async();
RcppExport SEXP _usbtc08r_open_unit_async() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(open_unit_async());
    return rcpp_result_gen;
END_RCPP
}
// open_unit_progress
List open_unit_progress();
RcppExport SEXP _usbtc08r_open_unit_progress() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(open_unit_progress());
    return rcpp_result_gen;
END_RCPP
}
// get_last_error
int get_last_error(int handle);
RcppExport SEXP _usbtc08r_get_last_error(SEXP handleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type handle(handleSEXP);
    rcpp_result_gen = Rcpp::wrap(get_last_error(handle));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_usbtc08r_open_unit", (DL_FUNC) &_usbtc08r_open_unit, 0},
    {"_usbtc08r_open_unit_async", (DL_FUNC) &_usbtc08r_open_unit_async, 0},
    {"_usbtc08r_open_unit_progress", (DL_FUNC) &_usbtc08r_open_unit_progress, 0},
    {"_usbtc08r_get_last_error", (DL_FUNC) &_usbtc08r_get_last_error, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_usbtc08r(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
